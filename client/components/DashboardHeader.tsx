import { cn } from "@/lib/utils";

interface HeaderProps {
  className?: string;
}

export function DashboardHeader({ className, onOpenSidebar, mobileOpen }: HeaderProps & { onOpenSidebar?: () => void; mobileOpen?: boolean }) {
  const navItems = [
    "Home",
    "Cars for Sale",
    "Trade in your Car",
    "Dealers",
    "Contact",
  ];

  const headerClasses = cn(
    "flex items-center justify-between px-5 py-3 relative",
    // Mobile: keep white (or black when menu open). Non-mobile: use a lighter grey background.
    mobileOpen
      ? "bg-black border-black text-white h-[76px] sm:bg-black sm:text-white"
      : "bg-white text-black h-[76px] sm:bg-[#F5F5F5] sm:text-black lg:h-auto border-b border-line",
    className
  );

  return (
    <div className={headerClasses}>
      {/* Red stripe at top - only visible on mobile when menu is closed */}
      {!mobileOpen && (
        <div className="absolute top-0 left-0 right-0 h-[9px] bg-[#DE0707] sm:hidden" />
      )}
      {/* Left: logo on mobile, nav on desktop */}
      <div className="flex items-center gap-4">
        {/* Mobile logo (visible on small screens) */}
        <svg
          className="block lg:hidden w-[180px] sm:w-[120px] h-[20px]"
          viewBox="0 0 214 19"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path d="M60.6914 10.9426V10.8995C60.6914 6.71388 63.9183 3.42969 68.2796 3.42969C71.2199 3.42969 73.112 4.66028 74.3839 6.42778L71.3808 8.74788C70.5604 7.72108 69.6143 7.0666 68.2364 7.0666C66.2226 7.0666 64.8015 8.7714 64.8015 10.8642V10.9034C64.8015 13.0589 66.2187 14.7402 68.2364 14.7402C69.736 14.7402 70.6232 14.0426 71.4829 12.9962L74.486 15.1321C73.1277 17.0015 71.2984 18.3771 68.1108 18.3771C64.0007 18.3771 60.6875 15.2379 60.6875 10.9465L60.6914 10.9426Z" fill="#231F20"/>
          <path d="M89.1611 3.61328H93.0042L99.1321 18.0825H94.8571L93.809 15.5155H88.2582L87.2297 18.0825H83.0371L89.165 3.61328H89.1611ZM92.6548 12.4195L91.0532 8.33577L89.428 12.4195H92.6548Z" fill="#231F20"/>
          <path d="M108.664 3.71484H115.467C117.665 3.71484 119.189 4.29095 120.154 5.27464C120.998 6.09372 121.43 7.20283 121.43 8.62154V8.66465C121.43 10.8593 120.256 12.3172 118.47 13.0775L121.905 18.0861H117.3L114.403 13.7359H112.656V18.0861H108.668V3.71876L108.664 3.71484ZM115.283 10.6124C116.641 10.6124 117.422 9.95402 117.422 8.90763V8.86843C117.422 7.73974 116.602 7.16364 115.263 7.16364H112.652V10.6124H115.283V10.6124Z" fill="#231F20"/>
          <path d="M132.441 15.1899L139.657 7.08133H132.689V3.71484H145.168V6.60713L137.953 14.7157H145.168V18.0822H132.441V15.1899V15.1899Z" fill="#6D6E71"/>
          <path d="M156.777 3.71484H160.785V18.0822H156.777V3.71484Z" fill="#6D6E71"/>
          <path d="M172.883 3.71484H176.604L182.524 11.31V3.71484H186.469V18.0822H182.976L176.828 10.2009V18.0822H172.879V3.71484H172.883Z" fill="#6D6E71"/>
          <path d="M197.982 10.9426V10.8995C197.982 6.77266 201.311 3.42969 205.755 3.42969C210.199 3.42969 213.485 6.73347 213.485 10.8603V10.8995C213.485 15.0263 210.152 18.3692 205.712 18.3692C201.272 18.3692 197.982 15.0654 197.982 10.9386V10.9426ZM209.414 10.9426V10.8995C209.414 8.82626 207.914 7.01956 205.712 7.01956C203.51 7.01956 202.073 8.78315 202.073 10.8563V10.8955C202.073 12.9687 203.572 14.7754 205.751 14.7754C207.93 14.7754 209.41 13.0118 209.41 10.9386L209.414 10.9426Z" fill="#6D6E71"/>
          <path d="M49 11.64H18.2518L27.7431 2.16646H0.203125V0.09375H32.7546L23.2633 9.56728H49V11.64Z" fill="#BE1E2D"/>
          <path d="M39.9757 14.9564H9.22745L18.7188 5.48287H0.203125V3.41016H23.7303L14.2389 12.8857H39.9757V14.9564Z" fill="#231F20"/>
          <path d="M30.9513 18.2787H0.203125L9.69242 8.80318H0.203125V6.73047H14.7039L5.21462 16.206H30.9513V18.2787Z" fill="#6D6E71"/>
        </svg>

        {/* Desktop nav (visible on lg+) */}
        <nav className="hidden lg:flex items-center gap-10">
          {navItems.map((item, index) => (
            <div key={index} className="text-heading text-sm md:text-base font-medium font-albert cursor-pointer hover:text-main-color transition-colors">
              {item}
            </div>
          ))}
        </nav>
      </div>

      {/* Center: Upload icon on mobile when menu is closed */}
      {/* Design Tab Icon Slot - place an icon here via the design editor */}
    <div
      data-builder-slot="header-icon"
      role="region"
      aria-label="Header design icon slot"
      className="absolute left-4 top-1/2 transform translate-y-[-12px] flex items-center gap-2"
    >
      <div className="h-6 w-6" />
    </div>

      {/* Right: desktop user & button, mobile hamburger */}
      <div className="flex items-center gap-3">
        {/* Desktop user info + add listing (hidden on small screens) */}
        <div className="hidden lg:flex items-center gap-3">
          <div className="flex items-center gap-4">
            <div className="w-[34px] h-[34px] rounded-full bg-gray-300 flex items-center justify-center">
              <UserIcon className="w-4 h-4 text-gray-600" />
            </div>
            <div className="text-heading text-sm font-medium font-albert">25 Credits</div>
          </div>


          <button className="flex items-center gap-[10px] px-[10px] py-[10px] bg-main-color rounded-14 h-[50px] w-[160px] justify-center text-white">
            <span className="text-base font-medium font-albert">Add listing</span>
          </button>
        </div>

        {/* Cloud upload icon (visible on mobile, left of hamburger) */}
        <button className="lg:hidden p-2 rounded-md transition-colors hover:bg-black/5">
          <CloudUploadIcon className="w-5 h-5 sm:w-6 sm:h-6 text-black" />
        </button>

        {/* Mobile hamburger (visible on small screens) */}
        <button
          className={cn("lg:hidden p-2 rounded-md transition-colors", mobileOpen ? "bg-black" : "hover:bg-black/5")}
          onClick={onOpenSidebar}
          aria-label="Open menu"
        >
          <svg width="28" height="21" viewBox="0 0 28 21" fill="none" className={mobileOpen ? "text-white" : "text-black sm:text-black"}>
            <rect y="0" width="28" height="3.5" fill="currentColor"/>
            <rect y="8.75" width="28" height="3.5" fill="currentColor"/>
            <rect y="17.5" width="28" height="3.5" fill="currentColor"/>
          </svg>
        </button>
      </div>
    </div>
  );
}

function UserIcon({ className }: { className?: string }) {
  return (
    <svg className={className} viewBox="0 0 20 20" fill="none">
      <g clipPath="url(#clip0_user)">
        <path d="M10.0007 10.0014C10.9357 10.0014 11.8496 9.72417 12.627 9.20473C13.4044 8.68529 14.0103 7.94699 14.3681 7.0832C14.7259 6.2194 14.8196 5.2689 14.6372 4.3519C14.4547 3.4349 14.0045 2.59258 13.3434 1.93146C12.6823 1.27034 11.84 0.820113 10.923 0.63771C10.006 0.455308 9.05546 0.548923 8.19166 0.906719C7.32787 1.26452 6.58957 1.87042 6.07013 2.64782C5.55069 3.42521 5.27344 4.33918 5.27344 5.27415C5.27469 6.52751 5.77314 7.72919 6.65941 8.61545C7.54567 9.50172 8.74734 10.0002 10.0007 10.0014ZM10.0007 2.12263C10.624 2.12263 11.2333 2.30747 11.7516 2.65376C12.2699 3.00005 12.6738 3.49225 12.9123 4.06812C13.1509 4.64398 13.2133 5.27764 13.0917 5.88898C12.9701 6.50031 12.6699 7.06186 12.2292 7.50261C11.7884 7.94335 11.2269 8.24351 10.6155 8.36511C10.0042 8.48671 9.37054 8.4243 8.79468 8.18577C8.21881 7.94724 7.72661 7.5433 7.38032 7.02504C7.03403 6.50677 6.8492 5.89746 6.8492 5.27415C6.8492 4.43831 7.18123 3.63671 7.77225 3.04569C8.36328 2.45467 9.16488 2.12263 10.0007 2.12263V2.12263Z" fill="currentColor"/>
        <path d="M10.0011 11.5781C8.12108 11.5802 6.31869 12.328 4.98934 13.6573C3.65999 14.9867 2.91224 16.789 2.91016 18.669C2.91016 18.878 2.99316 19.0784 3.14092 19.2261C3.28868 19.3739 3.48908 19.4569 3.69803 19.4569C3.90699 19.4569 4.10739 19.3739 4.25515 19.2261C4.4029 19.0784 4.48591 18.878 4.48591 18.669C4.48591 17.2063 5.06697 15.8035 6.10126 14.7692C7.13555 13.7349 8.53835 13.1539 10.0011 13.1539C11.4638 13.1539 12.8666 13.7349 13.9009 14.7692C14.9352 15.8035 15.5162 17.2063 15.5162 18.669C15.5162 18.878 15.5992 19.0784 15.747 19.2261C15.8947 19.3739 16.0951 19.4569 16.3041 19.4569C16.513 19.4569 16.7134 19.3739 16.8612 19.2261C17.009 19.0784 17.092 18.878 17.092 18.669C17.0899 16.789 16.3421 14.9867 15.0128 13.6573C13.6834 12.328 11.881 11.5802 10.0011 11.5781V11.5781Z" fill="currentColor"/>
      </g>
      <defs>
        <clipPath id="clip0_user">
          <rect width="18.9091" height="18.9091" fill="white" transform="translate(0.546875 0.546875)"/>
        </clipPath>
      </defs>
    </svg>
  );
}

function ChevronDownIcon({ className }: { className?: string }) {
  return (
    <svg className={className} viewBox="0 0 12 12" fill="none">
      <path d="M9.75 4.125L6 7.875L2.25 4.125" stroke="currentColor" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  );
}

function UploadIcon({ className }: { className?: string }) {
  return (
    <svg className={className} viewBox="0 0 30 30" fill="none">
      <path d="M17.438 16.64H11.2518L14.7431 13.1665H7.20312V11.0938H19.7546L16.2633 14.5673H17.438V16.64Z" fill="#BE1E2D"/>
      <path d="M16.9757 19.9564H6.22754L9.71875 16.4829H7.20312V14.4102H14.7303L11.2389 17.8857H16.9757V19.9564Z" fill="#231F20"/>
      <path d="M15.9513 23.2787H7.20312L10.6924 19.8032H7.20312V17.7305H13.7039L10.2146 21.206H15.9513V23.2787Z" fill="#6D6E71"/>
      <path d="M19.369 21.8521C19.314 21.9065 19.25 21.9498 19.178 21.9792C19.107 22.0087 19.031 22.0239 18.954 22.0239C18.877 22.0239 18.801 22.0087 18.73 21.9792C18.659 21.9498 18.594 21.9065 18.54 21.8521L14.853 18.165V28.4688C14.853 28.6242 14.791 28.7732 14.681 28.8831C14.571 28.993 14.422 29.0547 14.267 29.0547C14.111 29.0547 13.962 28.993 13.852 28.8831C13.742 28.7732 13.681 28.6242 13.681 28.4688V18.165L9.994 21.8521C9.884 21.962 9.735 22.0238 9.579 22.0238C9.424 22.0238 9.274 21.962 9.165 21.8521C9.055 21.7421 8.993 21.593 8.993 21.4375C8.993 21.282 9.055 21.1329 9.165 21.023L13.852 16.3355C13.906 16.281 13.971 16.2378 14.042 16.2083C14.113 16.1788 14.19 16.1636 14.267 16.1636C14.344 16.1636 14.42 16.1788 14.491 16.2083C14.562 16.2378 14.627 16.281 14.681 16.3355L19.369 21.023C19.423 21.0774 19.466 21.142 19.496 21.2131C19.525 21.2843 19.54 21.3605 19.54 21.4375C19.54 21.5145 19.525 21.5908 19.496 21.6619C19.466 21.733 19.423 21.7976 19.369 21.8521ZM15.438 4.4453C13.08 4.4478 10.772 5.1273 8.788 6.403C6.805 7.6788 5.229 9.4971 4.249 11.6421C3.046 11.4053 1.806 11.4227 0.611 11.6934C-0.585 11.964 -1.711 12.4818 -2.695 13.2135C-3.678 13.9452 -4.498 14.8746 -5.101 15.9419C-5.704 17.0093 -6.077 18.1911 -6.197 19.4113C-6.316 20.6315 -6.178 21.8631 -5.793 23.027C-5.408 24.1909 -4.784 25.2614 -3.96 26.1696C-3.137 27.0778 -2.132 27.8036 -1.011 28.3005C0.109 28.7974 1.322 29.0543 2.548 29.0547H8.407C8.563 29.0547 8.712 28.993 8.822 28.8831C8.931 28.7732 8.993 28.6242 8.993 28.4688C8.993 28.3134 8.931 28.1643 8.822 28.0544C8.712 27.9445 8.563 27.8828 8.407 27.8828H2.548C1.493 27.8851 0.449 27.6683 -0.517 27.2461C-1.484 26.8239 -2.352 26.2056 -3.067 25.4303C-3.783 24.655 -4.329 23.7396 -4.672 22.7422C-5.015 21.7447 -5.147 20.6869 -5.06 19.6357C-4.972 18.5845 -4.668 17.5629 -4.165 16.6356C-3.663 15.7083 -2.973 14.8955 -2.14 14.2487C-1.306 13.6019 -0.348 13.1352 0.675 12.8781C1.698 12.6211 2.763 12.5793 3.803 12.7554C3.359 14.0404 3.133 15.3905 3.134 16.75C3.134 16.9054 3.195 17.0544 3.305 17.1643C3.415 17.2742 3.564 17.3359 3.72 17.3359C3.875 17.3359 4.024 17.2742 4.134 17.1643C4.244 17.0544 4.306 16.9054 4.306 16.75C4.306 14.743 4.849 12.7735 5.878 11.05C6.906 9.3264 8.381 7.9128 10.147 6.9589C11.913 6.0049 13.903 5.546 15.908 5.6308C17.914 5.7155 19.859 6.3407 21.538 7.4403C23.217 8.5398 24.567 10.0728 25.446 11.8769C26.325 13.6811 26.701 15.6894 26.532 17.6893C26.363 19.6892 25.657 21.6063 24.488 23.2377C23.319 24.8691 21.731 26.1542 19.892 26.957C19.769 27.0112 19.668 27.1059 19.607 27.2253C19.545 27.3447 19.527 27.4816 19.554 27.613C19.582 27.7444 19.654 27.8624 19.758 27.9472C19.862 28.0321 19.992 28.0786 20.126 28.0791C20.207 28.0796 20.286 28.0632 20.36 28.0308C22.953 26.9012 25.078 24.9129 26.377 22.4005C27.675 19.8881 28.069 17.005 27.491 14.2364C26.914 11.4678 25.4 8.9827 23.204 7.1994C21.009 5.4162 18.267 4.4436 15.438 4.4453Z" fill="currentColor"/>
    </svg>
  );
}

function CloudUploadIcon({ className }: { className?: string }) {
  return (
    <svg className={className} viewBox="0 0 38 38" fill="none">
      <path d="M27.3686 23.8521C27.3142 23.9065 27.2496 23.9498 27.1784 23.9792C27.1073 24.0087 27.0311 24.0239 26.9541 24.0239C26.8771 24.0239 26.8008 24.0087 26.7297 23.9792C26.6586 23.9498 26.5939 23.9065 26.5395 23.8521L22.8525 20.165V30.4688C22.8525 30.6242 22.7908 30.7732 22.6809 30.8831C22.571 30.993 22.422 31.0547 22.2666 31.0547C22.1112 31.0547 21.9621 30.993 21.8522 30.8831C21.7424 30.7732 21.6806 30.6242 21.6806 30.4688V20.165L17.9936 23.8521C17.8837 23.962 17.7346 24.0238 17.5791 24.0238C17.4236 24.0238 17.2745 23.962 17.1645 23.8521C17.0546 23.7421 16.9928 23.593 16.9928 23.4375C16.9928 23.282 17.0546 23.1329 17.1645 23.023L21.852 18.3355C21.9064 18.281 21.9711 18.2378 22.0422 18.2083C22.1133 18.1788 22.1896 18.1636 22.2666 18.1636C22.3436 18.1636 22.4198 18.1788 22.4909 18.2083C22.5621 18.2378 22.6267 18.281 22.6811 18.3355L27.3686 23.023C27.4231 23.0774 27.4663 23.142 27.4958 23.2131C27.5253 23.2843 27.5405 23.3605 27.5405 23.4375C27.5405 23.5145 27.5253 23.5908 27.4958 23.6619C27.4663 23.733 27.4231 23.7976 27.3686 23.8521ZM23.4384 6.44531C21.08 6.44779 18.7719 7.12727 16.7883 8.40302C14.8047 9.67876 13.229 11.4971 12.2485 13.6421C11.0456 13.4053 9.80646 13.4227 8.61071 13.6934C7.41496 13.964 6.28905 14.4818 5.30534 15.2135C4.32163 15.9452 3.50188 16.8746 2.89877 17.9419C2.29565 19.0093 1.92252 20.1911 1.80334 21.4113C1.68417 22.6315 1.82159 23.8631 2.20677 25.027C2.59195 26.1909 3.21638 27.2614 4.03992 28.1696C4.86347 29.0778 5.8679 29.8036 6.98869 30.3005C8.10948 30.7974 9.32183 31.0543 10.5478 31.0547H16.4072C16.5626 31.0547 16.7116 30.993 16.8215 30.8831C16.9314 30.7732 16.9931 30.6242 16.9931 30.4688C16.9931 30.3134 16.9314 30.1643 16.8215 30.0544C16.7116 29.9445 16.5626 29.8828 16.4072 29.8828H10.5478C9.49304 29.8851 8.44929 29.6683 7.48269 29.2461C6.51608 28.8239 5.64769 28.2056 4.93252 27.4303C4.21735 26.655 3.671 25.7396 3.32807 24.7422C2.98514 23.7447 2.85311 22.6869 2.94034 21.6357C3.02757 20.5845 3.33216 19.5629 3.83482 18.6356C4.33749 17.7083 5.02725 16.8955 5.86044 16.2487C6.69362 15.6019 7.65206 15.1352 8.67503 14.8781C9.698 14.6211 10.7632 14.5793 11.8032 14.7554C11.3595 16.0404 11.1332 17.3905 11.1338 18.75C11.1338 18.9054 11.1955 19.0544 11.3054 19.1643C11.4153 19.2742 11.5643 19.3359 11.7197 19.3359C11.8751 19.3359 12.0241 19.2742 12.134 19.1643C12.2439 19.0544 12.3056 18.9054 12.3056 18.75C12.3063 16.743 12.8495 14.7735 13.8777 13.05C14.9059 11.3264 16.381 9.91284 18.1467 8.95888C19.9125 8.00491 21.9033 7.54602 23.9085 7.63076C25.9137 7.7155 27.8587 8.34072 29.5377 9.44026C31.2166 10.5398 32.5672 12.0728 33.4463 13.8769C34.3255 15.6811 34.7005 17.6894 34.5319 19.6893C34.3632 21.6892 33.657 23.6063 32.4881 25.2377C31.3192 26.8691 29.731 28.1542 27.8916 28.957C27.7687 29.0112 27.6682 29.1059 27.6068 29.2253C27.5455 29.3447 27.5269 29.4816 27.5544 29.613C27.5818 29.7444 27.6536 29.8624 27.7576 29.9472C27.8617 30.0321 27.9917 30.0786 28.1259 30.0791C28.2066 30.0796 28.2865 30.0632 28.3603 30.0308C30.9532 28.9012 33.0779 26.9129 34.3766 24.4005C35.6754 21.8881 36.0691 19.005 35.4913 16.2364C34.9135 13.4678 33.3996 10.9827 31.2044 9.19943C29.0092 7.41616 26.2667 6.44356 23.4384 6.44531Z" fill="currentColor"/>
    </svg>
  );
}

function AddListingIcon({ className }: { className?: string }) {
  return (
    <svg className={className} viewBox="0 0 20 20" fill="none">
      <path d="M13.125 14.375V17.1875C13.125 17.705 12.705 18.125 12.1875 18.125H4.0625C3.81386 18.125 3.5754 18.0262 3.39959 17.8504C3.22377 17.6746 3.125 17.4361 3.125 17.1875V6.5625C3.125 6.045 3.545 5.625 4.0625 5.625H5.625C6.04381 5.62472 6.46192 5.65928 6.875 5.72834M13.125 14.375H15.9375C16.455 14.375 16.875 13.955 16.875 13.4375V9.375C16.875 5.65834 14.1725 2.57417 10.625 1.97834C10.2119 1.90928 9.79381 1.87472 9.375 1.875H7.8125C7.295 1.875 6.875 2.295 6.875 2.8125V5.72834M13.125 14.375H7.8125C7.56386 14.375 7.3254 14.2762 7.14959 14.1004C6.97377 13.9246 6.875 13.6861 6.875 13.4375V5.72834M16.875 11.25V9.6875C16.875 8.94158 16.5787 8.22621 16.0512 7.69876C15.5238 7.17132 14.8084 6.875 14.0625 6.875H12.8125C12.5639 6.875 12.3254 6.77623 12.1496 6.60041C11.9738 6.4246 11.875 6.18614 11.875 5.9375V4.6875C11.875 4.31816 11.8023 3.95243 11.6609 3.6112C11.5196 3.26998 11.3124 2.95993 11.0512 2.69876C10.7901 2.4376 10.48 2.23043 10.1388 2.08909C9.79757 1.94775 9.43184 1.875 9.0625 1.875H8.125" stroke="currentColor" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  );
}
